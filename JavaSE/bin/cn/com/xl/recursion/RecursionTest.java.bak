package cn.com.xl.recursion;

import java.util.Arrays;

public class RecursionTest {
	public static void main(String[] args) {
		triangle2(5);
	}

	public static void doAnagram2(){
		
		String str = "xafdvs";
		char[] arr1 = str.toCharArray();
		char[] arr2 = Arrays.copyOf(arr1,arr1.length);
		for(int i=0;i<arr1.length-1;i++)
		{
			for(int j = i+1;j<arr2.length;j++){
				System.out.println(arr1[i] + "," + arr2[j]);
			}
		}
	}

	
	/*
	 * ½×³Ë
	 */
	public static int triangle(int n){
		if(n==0){
			System.out.println(n);
			return 1;
		}
		int temp = n * triangle(n-1);
		System.out.println(temp);
		return temp;
	}
	/*
	 * Èý½ÇÊý
	 */
	public static int triangle2(int n){//2 1
		if(n==1){
			System.out.println(n);
			return n;
		}
		int temp = n + triangle2(n-1);//3+tri(3-1)  2+1
		System.out.println(temp);
		return temp;
	}
	/*static class AnagramApp{
		static int size;
		static int count;
		static char[] arrChar = new char[100];
		
		public static void doAnagram(int newSize){
			if(newSize == 1){
				return;
			}
			for(int j = 0; j<newSize; j++){
				doAnagram(newSize - 1);
				if(newSize == 2){
					displayWord();
				}
				rotate(newSize);
			}
		}
		private static void displayWord() {
			if(count < 99)
				System.out.print(" ");
			if(count <9)
				System.out.print(" ");
			System.out.print(++count + "");
			for(int j =0; j<size; j++){
				System.out.print(arrChar[j]);
			}
			System.out.print(" ");
			System.out.flush();
			if(count%6 == 0){
				System.out.println(" ");
			}
			
		}

		private static void rotate(int newSize) {
			int j;
			int position = size = newSize;
			char temp = arrChar[position];
			for(j=position+1; j<size; j++){
				arrChar[j-1] = arrChar[j];
				arrChar[j-1] = temp;
			}
			
		}
		public static String getString(){
			InputStreamReader isr = new InputStreamReader(System.in);
			BufferedReader br = new BufferedReader(isr);
			String s = null;
			try {
				s = br.readLine();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return s;
		}
	}*/

}
